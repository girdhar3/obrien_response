row.names(combined.RMA.GSE22552)
#create some random gene sets
genesets=vector("list",50)
for(i in 1:50){
genesets[[i]]=paste("g",sample(1:1000,size=30),sep="")
}
geneset.names=paste("set",as.character(1:50),sep="")
GSA.obj<-GSA(x,y, genenames=genenames, genesets=genesets, resp.type="Two class unpaired", nperms=100)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=.5)
genesets
list[[geneset1]]
list[[geneset1]]
list(geneset1)
GSA(as.matrix(combined.RMA.GSE22552),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(geneset1),genenames=row.names(combined.RMA.GSE22552))
GSA(as.matrix(combined.RMA.GSE22552),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(geneset1),genenames=row.names(combined.RMA.GSE22552))
list(geneset1)
list(as.vector(geneset1))
GSA(as.matrix(combined.RMA.GSE22552),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552))
as.matrix(combined.RMA.GSE22552)[1:5,]
tail9as.matrix(combined.RMA.GSE22552)
tail(as.matrix(combined.RMA.GSE22552))
GSA(as.matrix(combined.RMA.GSE22552),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
tt2(combined.RMA.GSE22552)
GSA(combined.RMA.GSE22552,c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
row.names(combined.RMA.GSE22552)
combined.RMA.GSE22552[1:5,]
as.matrix(combined.RMA.GSE22552)[1:5,]
matrix(combined.RMA.GSE22552)[1:5,]
GSA(matrix(combined.RMA.GSE22552),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
GSA(data.matrix(combined.RMA.GSE22552),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
data.matrix(combined.RMA.GSE22552)[1:5,]
GSA(matrix(combined.RMA.GSE22552),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
combined.RMA.GSE22552[1:5,]
dim(matrix(combined.RMA.GSE22552))
combined.RMA.GSE22552[1:5,]
data.matrix(combined.RMA.GSE22552,rownames.force=F)[1:5,]
GSA(data.matrix(combined.RMA.GSE22552,rownames.force=F)[1:5,],c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
GSA(data.matrix(combined.RMA.GSE22552,rownames.force=F),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
dim(combined.RMA.GSE22552)
combined.RMA.GSE22552[11855:11856,1:2]
data.matrix(combined.RMA.GSE22552)[1:5,1:5]
GSA(data.matrix(combined.RMA.GSE22552),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
is.numeric(data.matrix(combined.RMA.GSE22552))
row.names(combined.RMA.GSE22552)
genesets
GSA(data.matrix(combined.RMA.GSE22552),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
list(as.vector(geneset1))
genenames
c(1,1,1,2,2,2,3,3,3,4,4,4)
is.numeric(c(1,1,1,2,2,2,3,3,3,4,4,4))
y
is.numeric(y)
x
GSA(x,c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
is.numeric(x)
x[1:5,]
class(data.matrix(combined.RMA.GSE22552))
class(data.matrix(combined.RMA.GSE22552))
temp <- (combined.RMA.GSE22552)
names(temp) <- NULL
temp[1:5,]
temp <- data.matrix(combined.RMA.GSE22552)
names(temp) <- NULL
temp[1:5,]
colnames(temp) <- NULL
temp[1:5,]
row.names(temp) <- NULL
temp[1:5,]
GSA(temp,c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
is.numeric(temp)
nrow(gs.mat)
nrow(temp)
traceback()
nrow(temp)
nrow(gensesets)
nrow(list(as.vector(geneset1)))
nrow(row.names(combined.RMA.GSE22552))
nrow(temp)
temp[1:5,]
x[1:5,]
str(temp)
as.matrix(temp)
GSA(as.matrix(temp),c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
temp[1:5,]
GSA(as.matrix(temp),c(1,1,1,1,1,1,2,2,2,2,2,2),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
GSA.obj<-GSA(x,y, genenames=genenames, genesets=genesets, resp.type="Two class unpaired", nperms=100)
GSA.obj[1:5,]
GSA.obj
GSA.obj<-GSA(x,y, genenames=genenames, genesets=genesets, resp.type="Two class unpaired", nperms=100)
genenames[1:5,]
genenames[1:5]
genesets[1:5]
GSA(x=as.matrix(temp),y=c(1,1,1,1,1,1,2,2,2,2,2,2),genesets=list(as.vector(geneset1)),genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
temp[1:5,]
GSA(x=as.matrix(temp),y=c(1,1,1,1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
GSA(x=as.matrix(temp),y=c(1,1,1,1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
is.numeric(as.matrix(temp))
temp[1:5,]
genesets[1:5,]
genesets[1]
list(geneset1)[1]
list(as.vector(geneset1)[1]
list(as.vector(geneset1))[1]
GSA(x=as.matrix(temp),y=c(1,1,1,1,1,1,2,2,2,2,2,2),genesets=list(as.vector(geneset1))[1],genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
genesets[[1]] <- as.vector(geneset1))
genesets[[1]] <- as.vector(geneset1)
GSA(x=as.matrix(temp),y=c(1,1,1,1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=100)
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=1000)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=1)
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=1000)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=1)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=2)
GSA.listsets(GSA.obj, geneset.names=geneset.names)
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=1000)
GSA.listsets(GSA.obj)
GSA.obj
summary(GSA.obj)
GSA.obj$GSA.scores
GSA.obj$GSA.scores.perm
GSA.obj
summary(GSA.obj)
GSA.obj <- GSA(x=temp,y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=1000)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=1)
GSA.obj <- GSA(x=temp,y=c(1,1,1,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=1000)
GSA.listsets(GSA.obj, geneset.names=geneset.names)
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=1000)
GSA.listsets(GSA.obj, geneset.names=geneset.names)
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,1,1,1,2,2,2,3,3,3),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass", nperms=1000)
GSA.listsets(GSA.obj, geneset.names=geneset.names)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=1.0)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=100.0)
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,1,1,1,2,2,2,3,3,3),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass")
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=100.0)
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,1,1,3,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass")
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,1,1,3,3,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass")
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=100.0)
geneset[1:5,]
geneset[,c(1,3,6)]
genesets[[1]] <- as.vector(geneset[,c(1,3,6)])
genesets[[1]]
genesets
genesets[[1]] <- as.vector(geneset[,c(1,3,6)])
genesets <- NULL
genesets[[1]] <- as.vector(geneset[,1])
genesets[[2]] <- as.vector(geneset[,3])
genesets[[3]] <- as.vector(geneset[,6])
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass")
GSA.listsets(GSA.obj, geneset.names=geneset.names)
GSA.listsets(GSA.obj, geneset.names=geneset.names)
GSA.obj$pvalues.lo
GSA.obj$pvalues.hi
genesets
geneset <- scan("../data/GeneSets.txt",what="",sep="\t")
geneset[1:5,]
geneset
geneset <- read.table("../data/GeneSets.txt",header=T,sep="\t",fill=T)
geneset
geneset$Transfac_GATA1
na.omit(geneset$Transfac_GATA1)
geneset <- read.fwf("../data/GeneSets.txt",header=T,sep="\t",fill=T)
geneset <- read.table("../data/GeneSets.txt",header=T,sep="\t",na.strings="")
geneset$Transfac_GATA1
na.omit(geneset$Transfac_GATA1)
na.omit(as.vector(geneset$Transfac_GATA1))
as.vector(na.omit(as.vector(geneset$Transfac_GATA1)))
as.vector(na.omit(geneset$Transfac_GATA1))
genesets[[3]] <- as.vector(na.omit(geneset[,3]))
genesets[[1]] <- as.vector(na.omit(geneset[,1]))
genesets[[6]] <- as.vector(na.omit(geneset[,6]))
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Multiclass")
GSA.listsets(GSA.obj, geneset.names=geneset.names)
combined.RMA.GSE22552.temp <- combined.RMA.GSE22552
combined.RMA.GSE22552.melt <- melt(as.matrix(combined.RMA.GSE22552.temp))
combined.RMA.GSE22552.melt <- list(combined.RMA.GSE22552.melt, samples) %>%
Reduce(function(dtf1,dtf2) left_join(dtf1,dtf2,by=c("Var2"="name")), .)
combined.RMA.GSE22552.melt$group1 <- factor(combined.RMA.GSE22552.melt$group1, levels= rev(c("CFU_E","PRO_E","INT_E","LATE_E")), ordered=T)
combined.RMA.GSE22552.melt.mean <- combined.RMA.GSE22552.melt %>%
group_by(Var1,group1) %>%
summarize(val=mean(value))
combined.RMA.GSE22552.melt.mean <- combined.RMA.GSE22552.melt.mean %>%
filter(Var1 %in% geneset1)
ggplot(combined.RMA.GSE22552.melt.mean, aes(x=val, fill = group1, color = group1)) +
geom_density(alpha=0.1) +
scale_fill_manual(values = jdb_palette("flame_light")[c(2,4,6,8)]) +
scale_color_manual(values = jdb_palette("flame_light")[c(2,4,6,8)]) +
theme_bw()
#' GSE24759 RMA
#+ cache = FALSE, message = FALSE, warning = FALSE, echo = FALSE, eval = TRUE, fig.width=8, fig.height=2.5, fig.align='center', fig.cap = "Gene set expression by erythroid maturation (GSE24759)"
combined.RMA.GSE24759.temp <- combined.RMA.GSE24759
combined.RMA.GSE24759.melt <- melt(as.matrix(combined.RMA.GSE24759.temp))
combined.RMA.GSE24759.melt <- list(combined.RMA.GSE24759.melt, samples) %>%
Reduce(function(dtf1,dtf2) left_join(dtf1,dtf2,by=c("Var2"="name")), .)
combined.RMA.GSE24759.melt$group1 <- factor(combined.RMA.GSE24759.melt$group1, levels= rev(c("CD34pos_CD71pos_GlyAneg","CD34neg_CD71pos_GlyAneg","CD34neg_CD71pos_GlyApos","CD34neg_CD71neg_GlyApos","CD34neg_CD71lo_GlyApos")), ordered=T)
combined.RMA.GSE24759.melt.mean <- combined.RMA.GSE24759.melt %>%
group_by(Var1,group1) %>%
summarize(val=mean(value))
combined.RMA.GSE24759.melt.mean <- combined.RMA.GSE24759.melt.mean %>%
filter(Var1 %in% geneset1)
ggplot(combined.RMA.GSE24759.melt.mean, aes(x=val, fill = group1, color = group1)) +
geom_density(alpha=0.1) +
scale_fill_manual(values = jdb_palette("brewer_celsius")[c(9,7,5,3,1)]) +
scale_color_manual(values = jdb_palette("brewer_celsius")[c(9,7,5,3,1)]) +
theme_bw()
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="quantitative")
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Quantitative")
GSA.listsets(GSA.obj, geneset.names=geneset.names)
genesets[[2]] <- as.vector(na.omit(geneset[,3]))
genesets[[2]] <- as.vector(na.omit(geneset[,6]))
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Quantitative")
GSA.listsets(GSA.obj, geneset.names=geneset.names)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=1)
genesets <- NULL
genesets[[1]] <- as.vector(na.omit(geneset[,1]))
genesets[[2]] <- as.vector(na.omit(geneset[,3]))
genesets[[3]] <- as.vector(na.omit(geneset[,6]))
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=1)
GSA.obj <- GSA(x=as.matrix(temp),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Quantitative",nperms=1000)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=1)
GSA.obj <- GSA(x=as.data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Quantitative",nperms=1000)
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE22552), resp.type="Quantitative",nperms=1000)
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Quantitative",nperms=1000)
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Quantitative",nperms=1000)
data.matrix(combined.RMA.GSE41817)[1:5,]
GSA.obj <- GSA(x=as.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Quantitative",nperms=1000)
temp <- data.matrix(combined.RMA.GSE41817)
colnames(temp) <- NULL
row.names(temp) <- NULL
temp[1:5,]
GSA.obj <- GSA(x=temp,y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Quantitative",nperms=1000)
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,3,3,3,4,4,4),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Quantitative",nperms=1000)
combined.RMA.GSE41817[1:5,]
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Quantitative",nperms=1000)
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Quantitative",nperms=1000)
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=1)
genesets
GSA.correlate(GSA.genesets.obj, genenames)
GSA.correlate(genesets, genenames)
GSA.correlate(genesets, row.names(combined.RMA.GSE41817))
row.names(combined.RMA.GSE41817)
GSA.correlate(genesets, row.names(combined.RMA.GSE41817))
genesets
geneset.names
genesets
#create some random gene sets
genesets=vector("list",50)
for(i in 1:50){
genesets[[i]]=paste("g",sample(1:1000,size=30),sep="")
}
geneset.names=paste("set",as.character(1:50),sep="")
GSA.correlate(genesets, genenames)
# y must take values 1,2
set.seed(100)
x<-matrix(rnorm(1000*20),ncol=20)
dd<-sample(1:1000,size=100)
u<-matrix(2*rnorm(100),ncol=10,nrow=100)
x[dd,11:20]<-x[dd,11:20]+u
y<-c(rep(1,10),rep(2,10))
genenames=paste("g",1:1000,sep="")
#create some random gene sets
genesets=vector("list",50)
for(i in 1:50){
genesets[[i]]=paste("g",sample(1:1000,size=30),sep="")
}
geneset.names=paste("set",as.character(1:50),sep="")
GSA.correlate(genesets, genenames)
genesets
genenames
GSA.listsets(GSA.obj, geneset.names=geneset.names,FDRcut=1)
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Two class unpaired",nperms=1000)
genesets <- NULL
genesets[[1]] <- geneset[,1]
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Two class unpaired",nperms=1000)
genesets
genesets[[1]] <- as.vector(na.omit(geneset[,1]))
genesets
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Two class unpaired",nperms=1000)
genesets
genesets[[3]] <- as.vector(na.omit(geneset[,6]))
GSA.obj <- GSA(x=data.matrix(combined.RMA.GSE41817),y=c(1,1,1,2,2,2,2,2,2),genesets=genesets,genenames=row.names(combined.RMA.GSE41817), resp.type="Two class unpaired",nperms=1000)
install.packages("fgsea")
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("fgsea")
library(fgsea)
source("https://bioconductor.org/biocLite.R")
biocLite("fgsea")
install.packages(path_t_file, repos = NULL, type="source")
install.packages("/Users/julirsch/Downloads/fgsea_1.2.1-2.tar", repos = NULL, type="source")
install.packages("/Users/julirsch/Downloads/fgsea_1.2.1.tar", repos = NULL, type="source")
library(fgsea)
install.packages("fastmatch")
library(fgsea)
install.packages("/Users/julirsch/Downloads/fgsea_1.2.1-2.tar", repos = NULL, type="source")
library(fgsea)
fgsea()
data(examplePathways)
data(exampleRanks)
examplePathways
exampleRanks
fgseaRes <- fgsea(pathways = genesets,
stats = combined.SCAN.GSE89540,
minSize=15,
maxSize=500,
nperm=100)
fgseaRes <- fgsea(pathways = genesets,
stats = exampleRanks,
minSize=15,
maxSize=500,
nperm=100)
fgseaRes
fgseaRes <- fgsea(pathways = genesets,
stats = ,
minSize=15,
maxSize=500,
nperm=100)
combined.SCAN.GSE89540
# GSE24759
# Do this for later
combined.bn.GSE24759.melt <- melt(as.matrix(combined.bn.GSE24759))
combined.bn.GSE24759.melt <- list(combined.bn.GSE24759.melt, samples) %>%
Reduce(function(dtf1,dtf2) left_join(dtf1,dtf2,by=c("Var2"="name")), .)
# Make one vs all comparisons for each
groups <- samples %>%
filter(name %in% names(combined.bn.GSE24759)) %>%
.$group1 %>%
factor(levels=c("CD34pos_CD71pos_GlyAneg","CD34neg_CD71pos_GlyAneg","CD34neg_CD71pos_GlyApos","CD34neg_CD71lo_GlyApos","CD34neg_CD71neg_GlyApos"), ordered=TRUE)
condition <- model.matrix(~0+groups)
colnames(condition) <- c("CD34pos_CD71pos_GlyAneg","CD34neg_CD71pos_GlyAneg","CD34neg_CD71pos_GlyApos","CD34neg_CD71lo_GlyApos","CD34neg_CD71neg_GlyApos")
cont_matrix <- makeContrasts(CD34pos_CD71pos_GlyAnegvALL = CD34pos_CD71pos_GlyAneg - (CD34neg_CD71pos_GlyAneg+CD34neg_CD71pos_GlyApos+CD34neg_CD71lo_GlyApos+CD34neg_CD71neg_GlyApos)/4,
CD34neg_CD71pos_GlyAnegvALL = CD34neg_CD71pos_GlyAneg - (CD34pos_CD71pos_GlyAneg+CD34neg_CD71pos_GlyApos+CD34neg_CD71lo_GlyApos+CD34neg_CD71neg_GlyApos)/4,
CD34neg_CD71pos_GlyAposvALL = CD34neg_CD71pos_GlyApos - (CD34pos_CD71pos_GlyAneg+CD34neg_CD71pos_GlyAneg+CD34neg_CD71lo_GlyApos+CD34neg_CD71neg_GlyApos)/4,
CD34neg_CD71lo_GlyAposvALL = CD34neg_CD71lo_GlyApos - (CD34pos_CD71pos_GlyAneg+CD34neg_CD71pos_GlyAneg+CD34neg_CD71pos_GlyApos+CD34neg_CD71neg_GlyApos)/4,
CD34neg_CD71neg_GlyApos = CD34neg_CD71neg_GlyApos - (CD34pos_CD71pos_GlyAneg+CD34neg_CD71pos_GlyAneg+CD34neg_CD71pos_GlyApos+CD34neg_CD71lo_GlyApos)/4,
levels = condition)
# Convert to eSet and run limma
v <-new("ExpressionSet", exprs=as.matrix(combined.bn.GSE24759))
fit <- lmFit(v, condition)
fit <- contrasts.fit(fit, cont_matrix)
fit <- eBayes(fit)
out <- data.frame(fit$coefficients)
combined.bn.GSE24759.limma <- NULL
#Calculate unsigned GSA statistics and take top 100 for each comparison
for (i in 1:5) {
out[,i] <- abs(fit$coefficients[,i] * log10(fit$p.value)[,i])
combined.bn.GSE24759.limma <- c(combined.bn.GSE24759.limma,row.names(head(out[order(out[,i]),],300)))
}
combined.bn.GSE24759.limma <- unique(combined.bn.GSE24759.limma)
y <- matrix(rnorm(1000*6),1000,6)
design <- cbind(Intercept=1,Group=c(0,0,0,1,1,1))
# First set of 20 genes are genuinely differentially expressed
index1 <- 1:20
y[index1,4:6] <- y[index1,4:6]+1
y
y[1:5,]
dim(y)
combined.bn.GSE24759.limma[1:5,]
combined.bn.GSE24759.limma
fit[1:5,]
fit
fit$coefficients[1:5,]
fit$coefficients$Contrasts[1:5,]
fit$coefficients[1,]
fit$coefficients[1,1]
fit$coefficients[1:5,1]
fit$coefficients[1:5,1]
combined.bn.GSE24759.melt[1:5,]
combined.bn.GSE24759[1:5,]
scale(combined.bn.GSE24759.melt)1[:5,]
fgseaRes <- fgsea(pathways = genesets,
stats = ,
minSize=15,
maxSize=500,
nperm=100)
fgseaRes <- fgsea(pathways = genesets,
stats = ,
minSize=15,
maxSize=500,
nperm=100)
combined.SCAN.GSE22552 <- readRDS("../processed/combined_SCAN_GSE22552.rds")
combined.SCAN.GSE24759 <- readRDS("../processed/combined_SCAN_GSE24759.rds")
combined.SCAN.GSE41817 <- readRDS("../processed/combined_SCAN_GSE41817.rds")
combined.SCAN.GSE89540 <- readRDS("../processed/combined_SCAN_GSE89540.rds")
combined.RMA.GSE22552 <- readRDS("../processed/combined_RMA_GSE22552.rds")
combined.RMA.GSE24759 <- readRDS("../processed/combined_RMA_GSE24759.rds")
combined.RMA.GSE41817 <- readRDS("../processed/combined_RMA_GSE41817.rds")
combined.RMA.GSE89540 <- readRDS("../processed/combined_RMA_GSE89540.rds")
samples <- read.table("../data/Samples.txt",sep="\t",stringsAsFactors=F)
names(samples) <- c("GSM","name","GSE","stage","group1","group2")
#' Perform differential expression analysis for SCAN normalized gene sets
#+ cache = FALSE, message = FALSE, warning = FALSE, echo = FALSE, eval = TRUE
combined.SCAN.GSE41817.melt <- melt(as.matrix(combined.SCAN.GSE41817))
combined.SCAN.GSE41817.melt <- list(combined.SCAN.GSE41817.melt, samples) %>%
Reduce(function(dtf1,dtf2) left_join(dtf1,dtf2,by=c("Var2"="name")), .)
# Make one vs all comparisons for each
groups <- samples %>%
filter(name %in% names(combined.SCAN.GSE41817)) %>%
.$group1 %>%
factor(levels=c("Control","DBA"), ordered=TRUE)
condition <- model.matrix(~0+groups)
colnames(condition) <- c("Control","DBA")
cont_matrix <- makeContrasts(DBA - Control,
levels = condition)
# Convert to eSet and run limma
v <-new("ExpressionSet", exprs=as.matrix(combined.SCAN.GSE41817))
fit <- lmFit(v, condition)
fit <- contrasts.fit(fit, cont_matrix)
fit <- eBayes(fit)
combined.SCAN.GSE41817.table <- topTable(fit, n = 20000, sort.by="logFC", resort.by="logFC", p.value=1,adjust.method="fdr",lfc=0)
combined.SCAN.GSE41817.table [1:5,]
combined.SCAN.GSE41817.table [-100,]
tail(combined.SCAN.GSE41817.table)
head(combined.SCAN.GSE41817.table)
row.names(combined.SCAN.GSE41817.table)
fgseaRes <- fgsea(pathways = genesets,
stats = row.names(combined.SCAN.GSE41817.table),
minSize=15,
maxSize=500,
nperm=100)
ls()
examplePathways[1]
exampleRanks[1:5,]
exampleRanks[1]
exampleRanks[1:5,]
as.vector(combined.SCAN.GSE41817.table$logFC)
combined.SCAN.GSE41817.table$logFC
test <- combined.SCAN.GSE41817.table$logFC
names(test) <- row.names(combined.SCAN.GSE41817.table)
test
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=100)
fgsea
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=100)
fgseaRes
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=10000)
names(genesets)
genests[["GATA1"]]
genesets[["GATA1"]] <
genesets[["GATA1"]]
genesets[["GATA1"]] <- genesets[[1]]
genesets
genesets[["GATA1"]] <- genesets[[6]]
genesets[["GATA1"]] <- genesets[[3]]
genesets[["Ribosome biogenesis"]] <- genesets[[2]]
genesets[["Heme biosynthesis"]] <- genesets[[1]]
genesets[[]] <- genesets[[4:6]]
gensets[[]]
genesets[[]]
genesets[[]]
genesets[["GATA1"]]
genesets
genesets[["GATA1"]] <- as.vector(na.omit(geneset[,6]))
genesets <- NULL
genesets[["GATA1"]] <- as.vector(na.omit(geneset[,6]))
genesets[["Ribosome Biogenesis"]] <- as.vector(na.omit(geneset[,3]))
genesets[["Heme Biosynthesis"]] <- as.vector(na.omit(geneset[,1]))
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=10000)
genesets
test[1:5,]
test
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=10000)
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=100)
fgseaRes
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=1000)
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=10000)
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=100)
fgseaRes
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=1000)
fgseaRes
fgseaRes <- fgsea(pathways = genesets,
stats = test,
minSize=15,
maxSize=500,
nperm=10000)
